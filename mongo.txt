cec@cec:~$ mongo
MongoDB shell version v3.6.3
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.6.3
Server has startup warnings: 
2023-07-22T13:23:20.443+0530 I STORAGE  [initandlisten] 
2023-07-22T13:23:20.443+0530 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
2023-07-22T13:23:20.443+0530 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
2023-07-22T13:23:24.178+0530 I CONTROL  [initandlisten] 
2023-07-22T13:23:24.178+0530 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2023-07-22T13:23:24.178+0530 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2023-07-22T13:23:24.178+0530 I CONTROL  [initandlisten] 
> use mca
switched to db mca
> db;
mca
> db.dropDatabase();
{ "ok" : 1 }
> db;
mca
> db.dropDatabase(mca);
2023-07-22T13:48:00.838+0530 E QUERY    [thread1] ReferenceError: mca is not defined :
@(shell):1:1
> db.drop(mca);
2023-07-22T13:49:17.317+0530 E QUERY    [thread1] ReferenceError: mca is not defined :
@(shell):1:1
> db.createCollection("student");
{ "ok" : 1 }
> db.createCollection("teacher");
{ "ok" : 1 }
> show Collections;
2023-07-22T13:51:17.599+0530 E QUERY    [thread1] Error: don't know how to show [Collections] :
shellHelper.show@src/mongo/shell/utils.js:953:11
shellHelper@src/mongo/shell/utils.js:706:15
@(shellhelp2):1:1
> show collections;
student
teacher
> db.teacher.drop;
function () {
    if (arguments.length > 0)
        throw Error("drop takes no argument");
    var ret = this._db.runCommand({drop: this.getName()});
    if (!ret.ok) {
        if (ret.errmsg == "ns not found")
            return false;
        throw _getErrorWithCode(ret, "drop failed: " + tojson(ret));
    }
    return true;
}
> db.teacher.drop();
true
> show collections;
student
> db.student.insert({"rollno":1,"name":"yadu"});
WriteResult({ "nInserted" : 1 })
> db.student.insert({"rollno":2,"name":"pavi"});
WriteResult({ "nInserted" : 1 })
> db.student.insert({"rollno":3,"name":"reno"});
WriteResult({ "nInserted" : 1 })
> db.student.insert({"rollno":4,"name":"aswin"});
WriteResult({ "nInserted" : 1 })
> db.student.find();
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
{ "_id" : ObjectId("64bb9300107a28019c642828"), "rollno" : 2, "name" : "pavi" }
{ "_id" : ObjectId("64bb930f107a28019c642829"), "rollno" : 3, "name" : "reno" }
{ "_id" : ObjectId("64bb931e107a28019c64282a"), "rollno" : 4, "name" : "aswin" }
> db.student.insert({"_id":1,"rollno":5,"name":"amal"});
WriteResult({ "nInserted" : 1 })
> db.student.find();
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
{ "_id" : ObjectId("64bb9300107a28019c642828"), "rollno" : 2, "name" : "pavi" }
{ "_id" : ObjectId("64bb930f107a28019c642829"), "rollno" : 3, "name" : "reno" }
{ "_id" : ObjectId("64bb931e107a28019c64282a"), "rollno" : 4, "name" : "aswin" }
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
> db.student.insert({"_id":1,"rollno":6,"name":"savio"});
WriteResult({
	"nInserted" : 0,
	"writeError" : {
		"code" : 11000,
		"errmsg" : "E11000 duplicate key error collection: mca.student index: _id_ dup key: { : 1.0 }"
	}
})
> db.student.find().pretty;
function () {
    this._prettyShell = true;
    return this;
}
> db.student.find().pretty();
{
	"_id" : ObjectId("64bb92bf107a28019c642827"),
	"rollno" : 1,
	"name" : "yadu"
}
{
	"_id" : ObjectId("64bb9300107a28019c642828"),
	"rollno" : 2,
	"name" : "pavi"
}
{
	"_id" : ObjectId("64bb930f107a28019c642829"),
	"rollno" : 3,
	"name" : "reno"
}
{
	"_id" : ObjectId("64bb931e107a28019c64282a"),
	"rollno" : 4,
	"name" : "aswin"
}
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
> db.student.findOne();
{
	"_id" : ObjectId("64bb92bf107a28019c642827"),
	"rollno" : 1,
	"name" : "yadu"
}
> db.student.find().limit(2);
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
{ "_id" : ObjectId("64bb9300107a28019c642828"), "rollno" : 2, "name" : "pavi" }
> db.student.find().limit(2).skip(2);
{ "_id" : ObjectId("64bb930f107a28019c642829"), "rollno" : 3, "name" : "reno" }
{ "_id" : ObjectId("64bb931e107a28019c64282a"), "rollno" : 4, "name" : "aswin" }
> db.student.find().limit(2).skip(4);
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
> db.student.find().limit(2).skip(5);
> db.student.save({"rollno":6,"name":"ajay"});
WriteResult({ "nInserted" : 1 })
> db.student.find();
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
{ "_id" : ObjectId("64bb9300107a28019c642828"), "rollno" : 2, "name" : "pavi" }
{ "_id" : ObjectId("64bb930f107a28019c642829"), "rollno" : 3, "name" : "reno" }
{ "_id" : ObjectId("64bb931e107a28019c64282a"), "rollno" : 4, "name" : "aswin" }
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{ "_id" : ObjectId("64bb95fa107a28019c64282b"), "rollno" : 6, "name" : "ajay" }
> db.student.save({"rollno":7,"name":"arun","place":"cherthala","age":22});
WriteResult({ "nInserted" : 1 })
> db.student.find();
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
{ "_id" : ObjectId("64bb9300107a28019c642828"), "rollno" : 2, "name" : "pavi" }
{ "_id" : ObjectId("64bb930f107a28019c642829"), "rollno" : 3, "name" : "reno" }
{ "_id" : ObjectId("64bb931e107a28019c64282a"), "rollno" : 4, "name" : "aswin" }
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{ "_id" : ObjectId("64bb95fa107a28019c64282b"), "rollno" : 6, "name" : "ajay" }
{ "_id" : ObjectId("64bb96be107a28019c64282c"), "rollno" : 7, "name" : "arun", "place" : "cherthala", "age" : 22 }
> db.student.remove({"rollno":2});
WriteResult({ "nRemoved" : 1 })
> db.student.find().pretty();
{
	"_id" : ObjectId("64bb92bf107a28019c642827"),
	"rollno" : 1,
	"name" : "yadu"
}
{
	"_id" : ObjectId("64bb930f107a28019c642829"),
	"rollno" : 3,
	"name" : "reno"
}
{
	"_id" : ObjectId("64bb931e107a28019c64282a"),
	"rollno" : 4,
	"name" : "aswin"
}
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{
	"_id" : ObjectId("64bb95fa107a28019c64282b"),
	"rollno" : 6,
	"name" : "ajay"
}
{
	"_id" : ObjectId("64bb96be107a28019c64282c"),
	"rollno" : 7,
	"name" : "arun",
	"place" : "cherthala",
	"age" : 22
}
> db.student.update({"rollno":3},{$set:"name":"pavi"});
2023-07-22T14:24:53.885+0530 E QUERY    [thread1] SyntaxError: missing } after property list @(shell):1:43
> db.student.update({"rollno":3},{$set:{"name":"pavi"}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.student.find().pretty();
{
	"_id" : ObjectId("64bb92bf107a28019c642827"),
	"rollno" : 1,
	"name" : "yadu"
}
{
	"_id" : ObjectId("64bb930f107a28019c642829"),
	"rollno" : 3,
	"name" : "pavi"
}
{
	"_id" : ObjectId("64bb931e107a28019c64282a"),
	"rollno" : 4,
	"name" : "aswin"
}
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{
	"_id" : ObjectId("64bb95fa107a28019c64282b"),
	"rollno" : 6,
	"name" : "ajay"
}
{
	"_id" : ObjectId("64bb96be107a28019c64282c"),
	"rollno" : 7,
	"name" : "arun",
	"place" : "cherthala",
	"age" : 22
}
> db.student.update({"rollno":3},{$set:{"Name":"pavi1"}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.student.find().pretty();
{
	"_id" : ObjectId("64bb92bf107a28019c642827"),
	"rollno" : 1,
	"name" : "yadu"
}
{
	"_id" : ObjectId("64bb930f107a28019c642829"),
	"rollno" : 3,
	"name" : "pavi",
	"Name" : "pavi1"
}
{
	"_id" : ObjectId("64bb931e107a28019c64282a"),
	"rollno" : 4,
	"name" : "aswin"
}
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{
	"_id" : ObjectId("64bb95fa107a28019c64282b"),
	"rollno" : 6,
	"name" : "ajay"
}
{
	"_id" : ObjectId("64bb96be107a28019c64282c"),
	"rollno" : 7,
	"name" : "arun",
	"place" : "cherthala",
	"age" : 22
}
> db.student.update({"rollno":3},{$set:{"name":"pavi1"}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.student.find().pretty();
{
	"_id" : ObjectId("64bb92bf107a28019c642827"),
	"rollno" : 1,
	"name" : "yadu"
}
{
	"_id" : ObjectId("64bb930f107a28019c642829"),
	"rollno" : 3,
	"name" : "pavi1",
	"Name" : "pavi1"
}
{
	"_id" : ObjectId("64bb931e107a28019c64282a"),
	"rollno" : 4,
	"name" : "aswin"
}
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{
	"_id" : ObjectId("64bb95fa107a28019c64282b"),
	"rollno" : 6,
	"name" : "ajay"
}
{
	"_id" : ObjectId("64bb96be107a28019c64282c"),
	"rollno" : 7,
	"name" : "arun",
	"place" : "cherthala",
	"age" : 22
}
> db.student.update({"rollno":7},{$set:{"name":"pavi","place":"alappuzha"}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.student.find().pretty();
{
	"_id" : ObjectId("64bb92bf107a28019c642827"),
	"rollno" : 1,
	"name" : "yadu"
}
{
	"_id" : ObjectId("64bb930f107a28019c642829"),
	"rollno" : 3,
	"name" : "pavi1",
	"Name" : "pavi1"
}
{
	"_id" : ObjectId("64bb931e107a28019c64282a"),
	"rollno" : 4,
	"name" : "aswin"
}
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{
	"_id" : ObjectId("64bb95fa107a28019c64282b"),
	"rollno" : 6,
	"name" : "ajay"
}
{
	"_id" : ObjectId("64bb96be107a28019c64282c"),
	"rollno" : 7,
	"name" : "pavi",
	"place" : "alappuzha",
	"age" : 22
}
> db.student.find().sort({"name":1});
{ "_id" : ObjectId("64bb95fa107a28019c64282b"), "rollno" : 6, "name" : "ajay" }
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{ "_id" : ObjectId("64bb931e107a28019c64282a"), "rollno" : 4, "name" : "aswin" }
{ "_id" : ObjectId("64bb96be107a28019c64282c"), "rollno" : 7, "name" : "pavi", "place" : "alappuzha", "age" : 22 }
{ "_id" : ObjectId("64bb930f107a28019c642829"), "rollno" : 3, "name" : "pavi1", "Name" : "pavi1" }
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
> db.student.find().sort({"name":-1});
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
{ "_id" : ObjectId("64bb930f107a28019c642829"), "rollno" : 3, "name" : "pavi1", "Name" : "pavi1" }
{ "_id" : ObjectId("64bb96be107a28019c64282c"), "rollno" : 7, "name" : "pavi", "place" : "alappuzha", "age" : 22 }
{ "_id" : ObjectId("64bb931e107a28019c64282a"), "rollno" : 4, "name" : "aswin" }
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{ "_id" : ObjectId("64bb95fa107a28019c64282b"), "rollno" : 6, "name" : "ajay" }
> db.student.find({"rollno":{$ne:2}});
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
{ "_id" : ObjectId("64bb930f107a28019c642829"), "rollno" : 3, "name" : "pavi1", "Name" : "pavi1" }
{ "_id" : ObjectId("64bb931e107a28019c64282a"), "rollno" : 4, "name" : "aswin" }
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{ "_id" : ObjectId("64bb95fa107a28019c64282b"), "rollno" : 6, "name" : "ajay" }
{ "_id" : ObjectId("64bb96be107a28019c64282c"), "rollno" : 7, "name" : "pavi", "place" : "alappuzha", "age" : 22 }
> db.student.find({"rollno":{$ne:3}});
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
{ "_id" : ObjectId("64bb931e107a28019c64282a"), "rollno" : 4, "name" : "aswin" }
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{ "_id" : ObjectId("64bb95fa107a28019c64282b"), "rollno" : 6, "name" : "ajay" }
{ "_id" : ObjectId("64bb96be107a28019c64282c"), "rollno" : 7, "name" : "pavi", "place" : "alappuzha", "age" : 22 }
> db.student.find({"rollno":{$lt:3}});
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
> db.student.find({"rollno":{$gt:3}});
{ "_id" : ObjectId("64bb931e107a28019c64282a"), "rollno" : 4, "name" : "aswin" }
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{ "_id" : ObjectId("64bb95fa107a28019c64282b"), "rollno" : 6, "name" : "ajay" }
{ "_id" : ObjectId("64bb96be107a28019c64282c"), "rollno" : 7, "name" : "pavi", "place" : "alappuzha", "age" : 22 }
> db.student.find({"rollno":{$gte:3}});
{ "_id" : ObjectId("64bb930f107a28019c642829"), "rollno" : 3, "name" : "pavi1", "Name" : "pavi1" }
{ "_id" : ObjectId("64bb931e107a28019c64282a"), "rollno" : 4, "name" : "aswin" }
{ "_id" : 1, "rollno" : 5, "name" : "amal" }
{ "_id" : ObjectId("64bb95fa107a28019c64282b"), "rollno" : 6, "name" : "ajay" }
{ "_id" : ObjectId("64bb96be107a28019c64282c"), "rollno" : 7, "name" : "pavi", "place" : "alappuzha", "age" : 22 }
> db.student.find({"rollno":{$lte:3}});
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
{ "_id" : ObjectId("64bb930f107a28019c642829"), "rollno" : 3, "name" : "pavi1", "Name" : "pavi1" }
> db.student.find({$and:[{"rollno":1},{"name":"yadu"}]});
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
> db.student.find({$or:[{"rollno":1},{"name":"pavi"}]});
{ "_id" : ObjectId("64bb92bf107a28019c642827"), "rollno" : 1, "name" : "yadu" }
{ "_id" : ObjectId("64bb96be107a28019c64282c"), "rollno" : 7, "name" : "pavi", "place" : "alappuzha", "age" : 22 }
> db.student.find({$and:[{"rollno":1},{"name":"pavi"}]});

